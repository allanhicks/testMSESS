    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase=0,
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
)
tmpdat <- rbind(dat$data,data.frame(
    NumVermC=0,
    Year=2004,
    SiteName=101,
    VesName="Aggressor",
    DropNum=1,
    HookNum="1_Bottom",
    AngNum=1,
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase=0,
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
))
head(dat$data$DropNum)
head(dat$data$Depth.m)
tmpdat <- rbind(dat$data,data.frame(
    NumVermC=0,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase=0,
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
))
data.frame(
    NumVermC=0,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase=0,
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
)
head(dat$data$FishTime)
head(dat$data$WaveHt.m)
head(dat$data$MoonPct)
head(dat$data$SSTDrop.C)
head(dat$data$PctLite)
head(dat$data$TidePhase)
head(dat$data$TideFlow2)
head(dat$data$WindSpeedDrop.k)
head(dat$data$DriftSpeedDrop.k)
head(dat$data$SwellHt.m)
head(dat$data$TideHt)
tmpdat <- rbind(dat$data,data.frame(
    NumVermC=0,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase="Ebb",
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
))
tmp <- glm(formula = NumVermC ~ Year+VesName+CrewStaff+DropNum+HookNum+poly(DriftSpeedDrop.k, 3), family = binomial, data = tmpdat)
tmpdat <- rbind(dat$data,data.frame(
    NumVermC=NA,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase="Ebb",
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
))
tmp <- glm(formula = NumVermC ~ Year+VesName+CrewStaff+DropNum+HookNum+poly(DriftSpeedDrop.k, 3), family = binomial, data = tmpdat)
predict.glm(tmp)
length(dat$data)
dim(dat$data)
dim(tmpdat)
unique(tmpdat$NumVermC)
table(tmpdat$NumVermC,useNA="ifany")
57591+8710
length(predict.glm(tmp))
tmp <- glm(formula = NumVermC ~ Year+VesName+CrewStaff+DropNum+HookNum+poly(DriftSpeedDrop.k, 3), family = binomial, data = tmpdat)
predict.glm(tmp)
length(predict.glm(tmp))
tmp <- glm(formula = NumVermC ~ Year+VesName+CrewStaff+DropNum+HookNum+poly(DriftSpeedDrop.k, 3), family = binomial, data = dat$data)
newdat <- data.frame(
    NumVermC=NA,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase="Ebb",
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
)
predict.glm(tmp,newdat=newdat)
predict.glm(tmp)
predict.glm(tmp)
predict.glm(tmp,newdat=newdat)
tmp <- glm(formula = NumVermC ~ Year + VesName, family = binomial, data = dat$data)
newdat <- data.frame(
    Year = factor(levels(dat$data$Year),levels=levels(dat$data$Year)),
    VesName = factor(levels(dat$data$VesName)[1],levels=levels(dat$data$VesName))
)
predict.glm(tmp,newdat=newdat)
tmp
tmp <- glm(formula = NumVermC ~ Year+VesName+CrewStaff, family = binomial, data = dat$data)
newdat <- data.frame(
    Year = factor(levels(dat$data$Year),levels=levels(dat$data$Year)),
    VesName = levels(dat$data$VesName)[1],
    CrewStaff = factor(levels(dat$data$CrewStaff)[1],levels=levels(dat$data$CrewStaff))
#    DropNum = levels(dat$data$DropNum)[1]
#    HookNum = levels(dat$data$HookNum)[1]
)
tmp
predict.glm(tmp,newdat=newdat)
newdat <- data.frame(
    Year = factor(levels(dat$data$Year),levels=levels(dat$data$Year)),
    SiteName = levels(dat$data$SiteName)[1],
    VesName = levels(dat$data$VesName)[1],
    CrewStaff = levels(dat$data$CrewStaff)[1],
    DropNum = levels(dat$data$DropNum)[1],
    HookNum = levels(dat$data$HookNum)[1],
    DriftSpeedDrop.k = 0,
    PctLite = 0,
    MoonPct = 0,
    SSTDrop.C = 0
)
predict.glm(dat,newdat=newdat)
dat
\newdat <- data.frame(
    NumVermC=NA,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase="Ebb",
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
)
newdat <- data.frame(
    NumVermC=NA,
    Year="2004",
    SiteName="101",
    VesName="Aggressor",
    DropNum="1",
    HookNum="1_Bottom",
    AngNum="1",
    CrewStaff="AndrewPerez",
    Depth.m=0,
    FishTime=0,
    WaveHt.m=0,
    MoonPct=0,
    SSTDrop.C=0,
    PctLite=0,
    TidePhase="Ebb",
    TideFlow2=0,
    WindSpeedDrop.k=0,
    DriftSpeedDrop.k=0,
    SwellHt.m=0,
    TideHt=0
)
predict.glm(dat,newdat=newdat)
#I'm not sure about the warning!
newdat <- data.frame(
    Year = factor(levels(dat$data$Year),levels=levels(dat$data$Year)),
    SiteName = levels(dat$data$SiteName)[1],
    VesName = levels(dat$data$VesName)[1],
    CrewStaff = levels(dat$data$CrewStaff)[1],
    DropNum = levels(dat$data$DropNum)[1],
    HookNum = levels(dat$data$HookNum)[1],
    DriftSpeedDrop.k = 0,
    PctLite = 0,
    MoonPct = 0,
    SSTDrop.C = 0
)
predict.glm(dat,newdat=newdat)
plot(2004:2012,c(0,dat$coefficients[2:9]))
plot(2004:2012,c(0,dat$coefficients[2:9]))
lines(2004:2012,x-x[1])
x <- predict.glm(dat,newdat=newdat)
plot(2004:2012,c(0,dat$coefficients[2:9]))
lines(2004:2012,x-x[1])
x
predict.glm(dat,newdat=newdat,type="response")
savehistory(); file.show( paste(getwd(), "\\.Rhistory", sep="") )
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.MCMC.Site.145.2.5M.dmp")
ls()
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.MCMC.Site.145.2.5M.dmp")
mcmc145 <- VermC.MCMC.Site.145.2.5M
rm(VermC.MCMC.Site.145.2.5M)
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.NFT.Final.glm.dmp")
dat <- VermC.NFT.Final.glm
rm(VermC.NFT.Final.glm)
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.Final.MCMC.2012.2.5M @@ Pre-revised @@.dmp")
mcmc <- VermC.Final.MCMC.2012.2.5M$MCMC
rm(VermC.Final.MCMC.2012.2.5M)
head(mcmc145)
mcmc145[1:2,]
poly.ds <- predict(poly(dat$data$DriftSpeedDrop.k,3),1.38)
poly.pl <- predict(poly(dat$data$PctLite,3),0.4)
poly.mp <- predict(poly(dat$data$MoonPct,3),40)
poly.st <- predict(poly(dat$data$SSTDrop.C,3),18)
x <- c(1,rep(0,149),poly.ds,poly.pl,poly.mp,poly.st)
names(x) <- colnames(mcmc)
yrs <- c("Year2004",names(x)[grep("Year",names(x))])
sites <- c("SiteName101",names(x)[grep("Site",names(x))])
sites145 <- c("SiteName145",names(x)[grep("Site",names(x))])
x.yr <- matrix(rep(x,length(yrs)),ncol=length(yrs),dimnames=list(names(x),yrs))
for(i in 2:ncol(x.yr)) {
    x.yr[i,i] <- 1
}
Index.site101 <- matrix(NA,nrow=nrow(mcmc),ncol=length(yrs))
Index.site101 <- inv.logit(as.matrix(mcmc) %*% x.yr)
library(gtools)
Index.site101 <- matrix(NA,nrow=nrow(mcmc),ncol=length(yrs))
Index.site101 <- inv.logit(as.matrix(mcmc) %*% x.yr)
Index.site145 <- matrix(NA,nrow=nrow(mcmc145),ncol=length(yrs))
Index.site145 <- inv.logit(as.matrix(mcmc145) %*% x.yr)
I101 <- apply(Index.site101,2,median)
I145 <- apply(Index.site145,2,median)
I101
I145
plot(2004:2012,I101/mean(I101),type="l",col="red")
lines(2004:2012,I145/mean(I145),col="blue")
I101/mean(I101)
I145/mean(I145)
 apply(Index.site101,2,mean)
 apply(Index.site145,2,mean)
boxplot(Index.site101)
apply(Index.site145,2,sd)
apply(Index.site145,2,sd)/apply(Index.site145,2,sd)
apply(Index.site145,2,sd)/apply(Index.site145,2,mean)
?boxplot
1:3+(0:2)
1:5+(0:4)
1:length(yrs)+((1:length(yrs))-1)
boxplot(Index.site101,at=1:length(yrs)+((1:length(yrs))-1))
boxplot(Index.site145,at=(1:length(yrs)+((1:length(yrs))-1))+1,add=T,col="red")
plot(2004:2012,I101/mean(I101),type="l",col="red")
lines(2004:2012,I145/mean(I145),col="blue")
Ind101.scaled <- apply(Index.site101,1,function(x){x/mean(x)})
Ind145.scaled <- apply(Index.site145,1,function(x){x/mean(x)})
Ind101.scaled <- apply(Index.site101,1,function(x){x/mean(x)})
Ind145.scaled <- apply(Index.site145,1,function(x){x/mean(x)})
plot(2004:2012,apply(Ind101.scaled,2,median),type="l",col="red")
lines(2004:2012,apply(Ind145.scaled,2,median),col="blue")
apply(Ind101.scaled,2,median)
Ind101.scaled
Ind101.scaled <- t(apply(Index.site101,1,function(x){x/mean(x)}))
Ind145.scaled <- t(apply(Index.site145,1,function(x){x/mean(x)}))
plot(2004:2012,apply(Ind101.scaled,2,median),type="l",col="red")
lines(2004:2012,apply(Ind145.scaled,2,median),col="blue")
x <- c(1,rep(0,149),poly.ds,poly.pl,poly.mp,poly.st)
names(x) <- colnames(mcmc)
x
yrs <- c("Year2004",names(x)[grep("Year",names(x))])
sites <- c("SiteName101",names(x)[grep("Site",names(x))])
sites145 <- c("SiteName145",names(x)[grep("Site",names(x))])
x.yr <- matrix(rep(x,length(yrs)),ncol=length(yrs),dimnames=list(names(x),yrs))
for(i in 2:ncol(x.yr)) {
    x.yr[i,i] <- 1
}
x.yr
Index.site101 <- inv.logit(as.matrix(mcmc) %*% x.yr)
apply(Index.site101,2,median)
Index.site145 <- inv.logit(as.matrix(mcmc145) %*% x.yr)
apply(Index.site145,2,median)
plot(2004:2012,I101/mean(I101),type="l",col="red")
lines(2004:2012,I145/mean(I145),col="blue")
windows()
Ind101.scaled <- t(apply(Index.site101,1,function(x){x/mean(x)}))
Ind145.scaled <- t(apply(Index.site145,1,function(x){x/mean(x)}))
plot(2004:2012,apply(Ind101.scaled,2,median),type="l",col="red")
lines(2004:2012,apply(Ind145.scaled,2,median),col="blue")
rm(list=ls())
library(gtools)
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.NFT.Final.glm.dmp")
dat <- VermC.NFT.Final.glm
rm(VermC.NFT.Final.glm)
load("C:\\NOAA2013\\HookAndLineSurvey\\Results\\Vermillion\\VermC.Final.MCMC.2012.2.5M @@ Pre-revised @@.dmp")
mcmc <- VermC.Final.MCMC.2012.2.5M$MCMC
rm(VermC.Final.MCMC.2012.2.5M)
poly.ds <- predict(poly(dat$data$DriftSpeedDrop.k,3),1.38)
poly.pl <- predict(poly(dat$data$PctLite,3),0.4)
poly.mp <- predict(poly(dat$data$MoonPct,3),40)
poly.st <- predict(poly(dat$data$SSTDrop.C,3),18)
#x <- c(1,rep(0,149),1.38,1.38^2,1.38^3,0.4,0.4^2,0.4^3,40,40^2,40^3,18,18^2,18^3)
x <- c(1,rep(0,149),poly.ds,poly.pl,poly.mp,poly.st)
names(x) <- colnames(mcmc)
yrs <- c("Year2004",names(x)[grep("Year",names(x))])
sites <- c("SiteName101",names(x)[grep("Site",names(x))])
x.yr <- matrix(rep(x,length(yrs)),ncol=length(yrs),dimnames=list(names(x),yrs))
for(i in 2:ncol(x.yr)) {
    x.yr[i,i] <- 1
}
Index.site <- array(NA,dim=c(nrow(mcmc),length(yrs),length(sites)))
Index.site[,,1] <- inv.logit(as.matrix(mcmc) %*% x.yr)
for(i in 2:length(sites)) {
    tmp <- x.yr
    tmp[8+i,] <- 1
    Index.site[,,i] <- inv.logit(as.matrix(mcmc) %*% tmp)
}
plot(2004:2012,apply(Index.site[,,1],2,mean),type="l",col="red",ylim=range(Index.site))
for(i in 2:length(sites)) {
    lines(2004:2012,apply(Index.site[,,i],2,mean),type="l",col=rgb(0,0,0,0.3),ylim=range(Index.site))
}
ind287 <- which(sites=="SiteName287")
ind287
y <- Index.site
plot(yrs,y["133",],col="red",type="l",xlab="Year",ylab="Example Standardized Index")
lines(yrs,y["145",],col="blue")
legend("bottomright",c("Site 133: Lowest occurrence","Site 145: Highest occurrence","Average of all sites"),col=c("red","blue","green3"),lty=1,lwd=c(1,1,3))
avgy <- apply(y,2,mean)
lines(yrs,avgy,lwd=2,col="green3")
lines(yrs,y["287",],col="blue")
dimnames(y)
ind133 <- which(sites=="SiteName133")
ind145 <- which(sites=="SiteName145")
ind287 <- which(sites=="SiteName287")
y <- Index.site
plot(yrs,y[,,ind133],col="red",type="l",xlab="Year",ylab="Example Standardized Index")
lines(yrs,y[,,ind145],col="blue")
yrs <- 2004:2012
y <- Index.site
plot(yrs,y[,,ind133],col="red",type="l",xlab="Year",ylab="Example Standardized Index")
apply(y[,,ind133],2,median)
table(dat$data$Year,dat$data$SiteName)
table(dat$data$NumVermC,dat$data$SiteName)
apply(table(dat$data$NumVermC,dat$data$SiteName),2,function(x){x/sum(x)})
apply(table(dat$data$NumVermC,dat$data$SiteName),2,function(x){x[2]/sum(x)})
x <- apply(table(dat$data$NumVermC,dat$data$SiteName),2,function(x){x[2]/sum(x)})
sort(x)
ind333 <- which(sites=="SiteName333")
ind145 <- which(sites=="SiteName145")
ind287 <- which(sites=="SiteName287")
yrs <- 2004:2012
y <- Index.site
plot(yrs,apply(y[,,ind333],2,median),col="red",type="l",xlab="Year",ylab="Example Standardized Index")
ind333 <- which(sites=="SiteName333")
ind145 <- which(sites=="SiteName145")
ind287 <- which(sites=="SiteName287")
yrs <- 2004:2012
y <- apply(Index.site,1:2,median)
dim(y)
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
dim(y)
y[,ind333]
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
plot(yrs,y[,ind333]/mean(y[,ind333]),col="red",type="l",xlab="Year",ylab="Example Standardized Index")
lines(yrs,y[,,ind145]/mean(y[,,ind145]),col="blue")
lines(yrs,y[,ind145]/mean(y[,ind145]),col="blue")
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
plot(yrs,y[,ind333]/mean(y[,ind333]),col="red",type="l",xlab="Year",ylab="Example Standardized Index")
lines(yrs,y[,ind145]/mean(y[,ind145]),col="blue")
legend("bottomright",c("Site 333: Lowest occurrence","Site 145: Highest occurrence","Average of all sites","Site 287"),col=c("red","blue","green3","black"),lty=1,lwd=c(1,1,2,3))
avgy <- apply(y,2,mean)
lines(yrs,avgy,lwd=2,col="green3")
lines(yrs,y[,ind287]/mean(y[,ind287]),col="black")
avgy <- apply(y,2,mean)
lines(yrs,avgy,lwd=2,col="green3")
lines(yrs,y[,ind287]/mean(y[,ind287]),col="black",lwd=3)
avgy
dim(y)
avgy <- apply(y,1,mean)
lines(yrs,avgy,lwd=2,col="green3")
avgy
lines(yrs,avgy/mean(avgy),lwd=2,col="green3")
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
plot(yrs,y[,ind333]/mean(y[,ind333]),col="red",type="l",xlab="Year",ylab="Example Standardized Index")
lines(yrs,y[,ind145]/mean(y[,ind145]),col="blue")
legend("topleft",c("Site 333: Lowest occurrence","Site 145: Highest occurrence","Average of all sites","Site 287"),col=c("red","blue","green3","black"),lty=1,lwd=c(1,1,2,3))
avgy <- apply(y,1,mean)
lines(yrs,avgy/mean(avgy),lwd=2,col="green3")
lines(yrs,y[,ind287]/mean(y[,ind287]),col="black",lwd=3)
ind333 <- which(sites=="SiteName333")
ind145 <- which(sites=="SiteName145")
ind287 <- which(sites=="SiteName287")
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
y
yrs <- 2004:2012
y <- apply(Index.site,2:3,median)
plot(yrs,y[,1]/mean(y[,1]),col="red",type="l",xlab="Year",ylab="Example Standardized Index")
for(i in 2:ncol(y)) {
    lines(yrs,y[,i]/mean(y[,i]),col=rgb(0,0,0,0.3))
}
avgy <- apply(y,1,mean)
avgy
avgy <- apply(y,1,mean)
lines(yrs,avgy/mean(avgy),col=rgb(0,1,0,0.3))
dim(Index.site)
ystand <- apply(Index.site,c(1,3),function(x){x/mean(x)})
dim(ystand)
apply(ystand,2:3,mean)
unique(apply(ystand,2:3,mean))_
unique(apply(ystand,2:3,mean))
ystand <- apply(Index.site,c(1,3),function(x){x/mean(x)})
yrs <- 2004:2012
y <- ystand
plot(yrs,y[,1],col="red",type="l",xlab="Year",ylab="Example Standardized Index")
dim(ystand)
y <- apply(ystand,c(1,3),median)
y
dim(y)
apply(y,2,mean)
savehistory(); file.show( paste(getwd(), "\\.Rhistory", sep="") )
source("C:/NOAA2014/Hake/MSE/testMSESS/Rscripts/mseSSGlobals.r")
paste(.ADMODEL,".cov",sep="")
file.path(.ADMODEL,".cov")
direc <- "C:\\NOAA2014\\Hake\\MSE"
setwd(paste(direc,"testMSESS\\Rscripts",sep="/"))
if(exists("scen")) rm(scen)  
source("mseSS.r")  #if scen exists it will run the scenario
#printDebug <- T
out <- runMSE(continue=T, useSystem=F, verbose=F, printstats=F, sendEmailUpdates=F, scen=1,
                emailAddress="yourname@gmail.com", emailPassword="",
                r4ssDir=paste(direc,"r4ss",sep="/"))
savehistory(); file.show( paste(getwd(), "\\.Rhistory", sep="") )
